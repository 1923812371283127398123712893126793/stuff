return function(input)
    local shift, key, encrypted = input:match("^(%d+)|(.-)|(.*)$")
    shift = tonumber(shift)
    if not shift or not key or not encrypted then
        error("Invalid format: Decryption key or shift missing")
    end

    -- Reconstruct decryption mapping
    local decryptMap = {}
    for i = 1, #key, 2 do
        decryptMap[key:sub(i + 1, i + 1)] = key:sub(i, i)
    end

    -- Decrypt the text with shift reversal
    local result = {}
    for i = 1, #encrypted do
        local char = encrypted:sub(i, i)
        local originalChar = decryptMap[char] or char -- Reverse encryption map
        table.insert(result, string.char(((originalChar:byte() - shift) % 256))) -- Reverse shift
    end

    local decryptedString = table.concat(result)

    -- Validate decrypted code before execution
    local chunk, err = loadstring(decryptedString)
    if not chunk then
        error("Decryption failed: " .. err)
    end
    return chunk()
end
