return function(enc)
    local sep = "|"
    local parts = {}

    -- Split seed and encrypted string
    for part in enc:gmatch("[^"..sep.."]+") do
        table.insert(parts, part)
    end

    local seed = tonumber(parts[1]) -- Extract dynamic seed
    local data = parts[2]

    if not seed or not data then
        error("Invalid encrypted format")
    end

    -- Decryption process
    local function decryptChar(c, shift)
        return string.char(((c - shift) % 256 + 256) % 256)
    end

    local decrypted = {}
    for i = 1, #data do
        local byte = string.byte(data, i)
        local shift = (seed % 255) + (i % 7)
        table.insert(decrypted, decryptChar(byte, shift))
    end

    local result = table.concat(decrypted)

    -- Ensure it's a valid Lua script before executing
    local func, err = loadstring(result)
    if not func then
        error("Decryption failed: " .. (err or "Unknown error"))
    end

    return func()
end
